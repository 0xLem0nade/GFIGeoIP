name: Build geoip files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 23 * *"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup environment
        shell: bash
        run: |
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Get MaxMind GeoLite2 database
        working-directory: ${{ github.workspace }}
        env:
          LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}
        run: |
          echo "Current working directory: $(pwd)"
          echo "Current files in here: $(ls -a)"
          curl -sSL --progress-bar "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&license_key=${LICENSE_KEY}&suffix=zip" -o GeoLite2-Country-CSV.zip
          curl -sSL --progress-bar "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN-CSV&license_key=${LICENSE_KEY}&suffix=zip" -o GeoLite2-ASN-CSV.zip
          mkdir ${{ github.workspace }}/resources/geolite2
          unzip -j -o GeoLite2-Country-CSV.zip -d ${{ github.workspace }}/resources/geolite2
          unzip -j -o GeoLite2-ASN-CSV.zip -d ${{ github.workspace }}/resources/geolite2
          rm -f GeoLite2-Country-CSV.zip
          rm -f GeoLite2-ASN-CSV.zip
          cd ${{ github.workspace }}/resources/geolite2 && ls -a

      - name: Get DB-IP database
        run: |
          curl -sSL "https://download.db-ip.com/free/dbip-country-lite-2023-10.csv.gz" -o dbip-country-lite.csv.gz
          mkdir ${{ github.workspace }}/resources/dbip
          gunzip dbip-country-lite.csv.gz
          rm -f dbip-country-lite.csv.gz
          find . -type f -name "dbip*.csv" -exec mv {} ${{ github.workspace }}/resources/dbip \;
          ls -a ${{ github.workspace }}/resources/dbip

      - name: Run python program
        run: |
          python ./generate_ip_csv.py

      - name: Generate sha256 checksum for assets
        run: |
          cd ./data || exit 1
          for name in $(ls *.dat); do
            sha256sum ${name} > ./${name}.sha256sum
          done

      - name: Release and upload assets
        run: |
          gh release create ${{ env.TAG_NAME }} -t ${{ env.RELEASE_NAME }} \
            ./data/agg_cidrs.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
